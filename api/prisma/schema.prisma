generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider = "mongodb"
    url      = env("DATABASE_URL")
}

model Saison {
    id     String @id @default(auto()) @map("_id") @db.ObjectId
    numero Int    @unique
    titre  String
    slug   String @unique
    image  String

    episodes Episode[]
}

model Episode {
    id          String   @id @default(auto()) @map("_id") @db.ObjectId
    title       String
    slug        String   @unique
    description String
    image       String
    critique    String
    dateDiffuse String
    musiques    String[]

    personnages PersonnageEpisode[]

    saison   Saison? @relation(fields: [saisonId], references: [id])
    saisonId String? @db.ObjectId
}

model Personnage {
    id          String @id @default(auto()) @map("_id") @db.ObjectId
    name        String
    slug        String @unique
    image       String
    description String
    cheveux     String
    genre       String
    occupation  String

    episodes PersonnageEpisode[]
}

model PersonnageEpisode {
    id           String     @id @default(auto()) @map("_id") @db.ObjectId
    personnage   Personnage @relation(fields: [personnageId], references: [id])
    personnageId String     @db.ObjectId
    episode      Episode    @relation(fields: [episodeId], references: [id])
    episodeId    String     @db.ObjectId

    @@unique([personnageId, episodeId])
}

model User {
    id         String      @id @default(auto()) @map("_id") @db.ObjectId
    email      String
    password   String
    actualites Actualite[]
}

model Actualite {
    id      String @id @default(auto()) @map("_id") @db.ObjectId
    message String

    user   User   @relation(fields: [userId], references: [id])
    userId String @db.ObjectId
}

model Anectode {
    id       String  @id @default(auto()) @map("_id") @db.ObjectId
    anectode String?
    date     String
<<<<<<< HEAD
}
=======
}
>>>>>>> 137e612 (FEAT: Ajout du modèle Anectode et des routes associées)
